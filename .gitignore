# Cache
__pycache__
*.pyc

# API keys and secrets
.env
.env.*
!.env.example
env.conf
_deploy*
_dev*

# Data
/data/
/backups/
/repo/
# Editors
.idea
.vscode
*.iml
modules.xml
*.ipr

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# OS metadata
.DS_Store
Thumbs.db
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresen

!/**/.gitkeep

# Python env
venv

# Makefile config
Makefile.config

# Testing
.coverage

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

**/.terraform.lock.hcl
*.terraform.lock.hcl*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
